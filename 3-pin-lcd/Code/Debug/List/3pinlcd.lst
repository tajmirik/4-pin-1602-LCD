
AVRASM ver. 2.1.30  F:\Projects\3-pin-lcd\Code\Debug\List\3pinlcd.asm Tue Feb 20 16:08:18 2024

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0045 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0xD3:
00002a 2049
00002b 6d61
00002c 6e20
00002d 746f      	.DB  0x49,0x20,0x61,0x6D,0x20,0x6E,0x6F,0x74
00002e 4b20
00002f 6d61
000030 6179
000031 0062      	.DB  0x20,0x4B,0x61,0x6D,0x79,0x61,0x62,0x0
                 _0x0:
000032 2049
000033 6d61
000034 4b20
000035 6d61      	.DB  0x49,0x20,0x61,0x6D,0x20,0x4B,0x61,0x6D
000036 6179
000037 0062      	.DB  0x79,0x61,0x62,0x0
                 _0x2000060:
F:\Projects\3-pin-lcd\Code\Debug\List\3pinlcd.asm(1123): warning: .cseg .db misalignment - padding zero byte
000038 0001      	.DB  0x1
                 _0x2000000:
000039 4e2d
00003a 4e41
00003b 4900
00003c 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
F:\Projects\3-pin-lcd\Code\Debug\List\3pinlcd.asm(1126): warning: .cseg .db misalignment - padding zero byte
00003d 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00003e 000c      	.DW  0x0C
00003f 0260      	.DW  _0xD2
000040 0064      	.DW  _0x0*2
                 
000041 0001      	.DW  0x01
000042 026c      	.DW  __seed_G100
000043 0070      	.DW  _0x2000060*2
                 
                 _0xFFFFFFFF:
000044 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000045 94f8      	CLI
000046 27ee      	CLR  R30
000047 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000048 e0f1      	LDI  R31,1
000049 bffb      	OUT  GICR,R31
00004a bfeb      	OUT  GICR,R30
00004b bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004c e08d      	LDI  R24,(14-2)+1
00004d e0a2      	LDI  R26,2
00004e 27bb      	CLR  R27
                 __CLEAR_REG:
00004f 93ed      	ST   X+,R30
000050 958a      	DEC  R24
000051 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000052 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000053 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000054 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000055 93ed      	ST   X+,R30
000056 9701      	SBIW R24,1
000057 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000058 e7ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000059 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005a 9185      	LPM  R24,Z+
00005b 9195      	LPM  R25,Z+
00005c 9700      	SBIW R24,0
00005d f061      	BREQ __GLOBAL_INI_END
00005e 91a5      	LPM  R26,Z+
00005f 91b5      	LPM  R27,Z+
000060 9005      	LPM  R0,Z+
000061 9015      	LPM  R1,Z+
000062 01bf      	MOVW R22,R30
000063 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000064 9005      	LPM  R0,Z+
000065 920d      	ST   X+,R0
000066 9701      	SBIW R24,1
000067 f7e1      	BRNE __GLOBAL_INI_LOOP
000068 01fb      	MOVW R30,R22
000069 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006a e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006b bfed      	OUT  SPL,R30
00006c e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006d bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006e e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006f e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000070 940c 01b3 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;
                 ;#include <stdlib.h>
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include "3plcd.h"
                 
                 	.CSEG
                 _command:
                 ; .FSTART _command
000072 940e 01c8 	CALL SUBOPT_0x0
                 ;	data0 -> Y+4
                 ;	data1 -> R17
                 ;	data2 -> R16
                 ;	counter -> R19
000074 64e0      	ORI  R30,0x40
000075 2f0e      	MOV  R16,R30
000076 98aa      	CBI  0x15,2
000077 98a8      	CBI  0x15,0
000078 e033      	LDI  R19,LOW(3)
                 _0x8:
000079 940e 01cf 	CALL SUBOPT_0x1
00007b f411      	BRNE _0xA
00007c 98a9      	CBI  0x15,1
00007d c001      	RJMP _0xB
                 _0xA:
00007e 9aa9      	SBI  0x15,1
                 _0xB:
00007f 9aa8      	SBI  0x15,0
000080 98a8      	CBI  0x15,0
000081 3030      	CPI  R19,0
000082 f011      	BREQ _0x9
000083 5031      	SUBI R19,1
000084 cff4      	RJMP _0x8
                 _0x9:
000085 e034      	LDI  R19,LOW(4)
                 _0x12:
000086 3038      	CPI  R19,8
000087 f460      	BRSH _0x13
000088 940e 01cf 	CALL SUBOPT_0x1
00008a f411      	BRNE _0x14
00008b 98a9      	CBI  0x15,1
00008c c001      	RJMP _0x15
                 _0x14:
00008d 9aa9      	SBI  0x15,1
                 _0x15:
00008e 9aa8      	SBI  0x15,0
00008f 98a8      	CBI  0x15,0
000090 3030      	CPI  R19,0
000091 f011      	BREQ _0x13
000092 5f3f      	SUBI R19,-1
000093 cff2      	RJMP _0x12
                 _0x13:
000094 940e 01d5 	CALL SUBOPT_0x2
000096 98aa      	CBI  0x15,2
000097 81ec      	LDD  R30,Y+4
000098 95e2      	SWAP R30
000099 70ef      	ANDI R30,0xF
00009a 2f0e      	MOV  R16,R30
00009b 98a8      	CBI  0x15,0
00009c e033      	LDI  R19,LOW(3)
                 _0x22:
00009d 940e 01cf 	CALL SUBOPT_0x1
00009f f411      	BRNE _0x24
0000a0 98a9      	CBI  0x15,1
0000a1 c001      	RJMP _0x25
                 _0x24:
0000a2 9aa9      	SBI  0x15,1
                 _0x25:
0000a3 9aa8      	SBI  0x15,0
0000a4 98a8      	CBI  0x15,0
0000a5 3030      	CPI  R19,0
0000a6 f011      	BREQ _0x23
0000a7 5031      	SUBI R19,1
0000a8 cff4      	RJMP _0x22
                 _0x23:
0000a9 e034      	LDI  R19,LOW(4)
                 _0x2C:
0000aa 3038      	CPI  R19,8
0000ab f460      	BRSH _0x2D
0000ac 940e 01cf 	CALL SUBOPT_0x1
0000ae f411      	BRNE _0x2E
0000af 98a9      	CBI  0x15,1
0000b0 c001      	RJMP _0x2F
                 _0x2E:
0000b1 9aa9      	SBI  0x15,1
                 _0x2F:
0000b2 9aa8      	SBI  0x15,0
0000b3 98a8      	CBI  0x15,0
0000b4 3030      	CPI  R19,0
0000b5 f011      	BREQ _0x2D
0000b6 5f3f      	SUBI R19,-1
0000b7 cff2      	RJMP _0x2C
                 _0x2D:
0000b8 940e 01d5 	CALL SUBOPT_0x2
0000ba 98a8      	CBI  0x15,0
0000bb 940e 01da 	CALL SUBOPT_0x3
0000bd 6410      	ORI  R17,LOW(64)
0000be e033      	LDI  R19,LOW(3)
                 _0x3C:
0000bf 940e 01df 	CALL SUBOPT_0x4
0000c1 f411      	BRNE _0x3E
0000c2 98a9      	CBI  0x15,1
0000c3 c001      	RJMP _0x3F
                 _0x3E:
0000c4 9aa9      	SBI  0x15,1
                 _0x3F:
0000c5 9aa8      	SBI  0x15,0
0000c6 98a8      	CBI  0x15,0
0000c7 3030      	CPI  R19,0
0000c8 f011      	BREQ _0x3D
0000c9 5031      	SUBI R19,1
0000ca cff4      	RJMP _0x3C
                 _0x3D:
0000cb e034      	LDI  R19,LOW(4)
                 _0x46:
0000cc 3038      	CPI  R19,8
0000cd f460      	BRSH _0x47
0000ce 940e 01df 	CALL SUBOPT_0x4
0000d0 f411      	BRNE _0x48
0000d1 98a9      	CBI  0x15,1
0000d2 c001      	RJMP _0x49
                 _0x48:
0000d3 9aa9      	SBI  0x15,1
                 _0x49:
0000d4 9aa8      	SBI  0x15,0
0000d5 98a8      	CBI  0x15,0
0000d6 3030      	CPI  R19,0
0000d7 f011      	BREQ _0x47
0000d8 5f3f      	SUBI R19,-1
0000d9 cff2      	RJMP _0x46
                 _0x47:
0000da 940e 01d5 	CALL SUBOPT_0x2
0000dc 940e 01da 	CALL SUBOPT_0x3
0000de e033      	LDI  R19,LOW(3)
                 _0x54:
0000df 940e 01df 	CALL SUBOPT_0x4
0000e1 f411      	BRNE _0x56
0000e2 98a9      	CBI  0x15,1
0000e3 c001      	RJMP _0x57
                 _0x56:
0000e4 9aa9      	SBI  0x15,1
                 _0x57:
0000e5 9aa8      	SBI  0x15,0
0000e6 98a8      	CBI  0x15,0
0000e7 3030      	CPI  R19,0
0000e8 f011      	BREQ _0x55
0000e9 5031      	SUBI R19,1
0000ea cff4      	RJMP _0x54
                 _0x55:
0000eb e034      	LDI  R19,LOW(4)
                 _0x5E:
0000ec 3038      	CPI  R19,8
0000ed f460      	BRSH _0x5F
0000ee 940e 01df 	CALL SUBOPT_0x4
0000f0 f411      	BRNE _0x60
0000f1 98a9      	CBI  0x15,1
0000f2 c001      	RJMP _0x61
                 _0x60:
0000f3 9aa9      	SBI  0x15,1
                 _0x61:
0000f4 9aa8      	SBI  0x15,0
0000f5 98a8      	CBI  0x15,0
0000f6 3030      	CPI  R19,0
0000f7 f011      	BREQ _0x5F
0000f8 5f3f      	SUBI R19,-1
0000f9 cff2      	RJMP _0x5E
                 _0x5F:
0000fa c09d      	RJMP _0x2080001
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0000fb e1a9      	LDI  R26,LOW(25)
0000fc e0b0      	LDI  R27,0
0000fd 940e 01ec 	CALL _delay_ms
0000ff e3a3      	LDI  R26,LOW(51)
000100 df71      	RCALL _command
000101 e3a2      	LDI  R26,LOW(50)
000102 df6f      	RCALL _command
000103 e2a8      	LDI  R26,LOW(40)
000104 df6d      	RCALL _command
000105 e0ac      	LDI  R26,LOW(12)
000106 df6b      	RCALL _command
000107 e0a6      	LDI  R26,LOW(6)
000108 df69      	RCALL _command
000109 e0a1      	LDI  R26,LOW(1)
00010a c001      	RJMP _0x2080002
                 ; .FEND
                 _lcd_blink:
                 ; .FSTART _lcd_blink
00010b e0af      	LDI  R26,LOW(15)
                 _0x2080002:
00010c df65      	RCALL _command
00010d 9508      	RET
                 ; .FEND
                 _data:
                 ; .FSTART _data
00010e 940e 01c8 	CALL SUBOPT_0x0
                 ;	data0 -> Y+4
                 ;	data1 -> R17
                 ;	data2 -> R16
                 ;	counter -> R19
000110 6ce0      	ORI  R30,LOW(0xC0)
000111 2f0e      	MOV  R16,R30
000112 98aa      	CBI  0x15,2
000113 98a8      	CBI  0x15,0
000114 e033      	LDI  R19,LOW(3)
                 _0x6E:
000115 940e 01cf 	CALL SUBOPT_0x1
000117 f411      	BRNE _0x70
000118 98a9      	CBI  0x15,1
000119 c001      	RJMP _0x71
                 _0x70:
00011a 9aa9      	SBI  0x15,1
                 _0x71:
00011b 9aa8      	SBI  0x15,0
00011c 98a8      	CBI  0x15,0
00011d 3030      	CPI  R19,0
00011e f011      	BREQ _0x6F
00011f 5031      	SUBI R19,1
000120 cff4      	RJMP _0x6E
                 _0x6F:
000121 e034      	LDI  R19,LOW(4)
                 _0x78:
000122 3038      	CPI  R19,8
000123 f460      	BRSH _0x79
000124 940e 01cf 	CALL SUBOPT_0x1
000126 f411      	BRNE _0x7A
000127 98a9      	CBI  0x15,1
000128 c001      	RJMP _0x7B
                 _0x7A:
000129 9aa9      	SBI  0x15,1
                 _0x7B:
00012a 9aa8      	SBI  0x15,0
00012b 98a8      	CBI  0x15,0
00012c 3030      	CPI  R19,0
00012d f011      	BREQ _0x79
00012e 5f3f      	SUBI R19,-1
00012f cff2      	RJMP _0x78
                 _0x79:
000130 940e 01d5 	CALL SUBOPT_0x2
000132 98aa      	CBI  0x15,2
000133 81ec      	LDD  R30,Y+4
000134 95e2      	SWAP R30
000135 70ef      	ANDI R30,0xF
000136 68e0      	ORI  R30,0x80
000137 2f0e      	MOV  R16,R30
000138 98a8      	CBI  0x15,0
000139 e033      	LDI  R19,LOW(3)
                 _0x88:
00013a 940e 01cf 	CALL SUBOPT_0x1
00013c f411      	BRNE _0x8A
00013d 98a9      	CBI  0x15,1
00013e c001      	RJMP _0x8B
                 _0x8A:
00013f 9aa9      	SBI  0x15,1
                 _0x8B:
000140 9aa8      	SBI  0x15,0
000141 98a8      	CBI  0x15,0
000142 3030      	CPI  R19,0
000143 f011      	BREQ _0x89
000144 5031      	SUBI R19,1
000145 cff4      	RJMP _0x88
                 _0x89:
000146 e034      	LDI  R19,LOW(4)
                 _0x92:
000147 3038      	CPI  R19,8
000148 f460      	BRSH _0x93
000149 940e 01cf 	CALL SUBOPT_0x1
00014b f411      	BRNE _0x94
00014c 98a9      	CBI  0x15,1
00014d c001      	RJMP _0x95
                 _0x94:
00014e 9aa9      	SBI  0x15,1
                 _0x95:
00014f 9aa8      	SBI  0x15,0
000150 98a8      	CBI  0x15,0
000151 3030      	CPI  R19,0
000152 f011      	BREQ _0x93
000153 5f3f      	SUBI R19,-1
000154 cff2      	RJMP _0x92
                 _0x93:
000155 940e 01d5 	CALL SUBOPT_0x2
000157 98a8      	CBI  0x15,0
000158 940e 01da 	CALL SUBOPT_0x3
00015a 6c10      	ORI  R17,LOW(192)
00015b e033      	LDI  R19,LOW(3)
                 _0xA2:
00015c 940e 01df 	CALL SUBOPT_0x4
00015e f411      	BRNE _0xA4
00015f 98a9      	CBI  0x15,1
000160 c001      	RJMP _0xA5
                 _0xA4:
000161 9aa9      	SBI  0x15,1
                 _0xA5:
000162 9aa8      	SBI  0x15,0
000163 98a8      	CBI  0x15,0
000164 3030      	CPI  R19,0
000165 f011      	BREQ _0xA3
000166 5031      	SUBI R19,1
000167 cff4      	RJMP _0xA2
                 _0xA3:
000168 e034      	LDI  R19,LOW(4)
                 _0xAC:
000169 3038      	CPI  R19,8
00016a f460      	BRSH _0xAD
00016b 940e 01df 	CALL SUBOPT_0x4
00016d f411      	BRNE _0xAE
00016e 98a9      	CBI  0x15,1
00016f c001      	RJMP _0xAF
                 _0xAE:
000170 9aa9      	SBI  0x15,1
                 _0xAF:
000171 9aa8      	SBI  0x15,0
000172 98a8      	CBI  0x15,0
000173 3030      	CPI  R19,0
000174 f011      	BREQ _0xAD
000175 5f3f      	SUBI R19,-1
000176 cff2      	RJMP _0xAC
                 _0xAD:
000177 940e 01d5 	CALL SUBOPT_0x2
000179 940e 01da 	CALL SUBOPT_0x3
00017b 6810      	ORI  R17,LOW(128)
00017c e033      	LDI  R19,LOW(3)
                 _0xBA:
00017d 940e 01df 	CALL SUBOPT_0x4
00017f f411      	BRNE _0xBC
000180 98a9      	CBI  0x15,1
000181 c001      	RJMP _0xBD
                 _0xBC:
000182 9aa9      	SBI  0x15,1
                 _0xBD:
000183 9aa8      	SBI  0x15,0
000184 98a8      	CBI  0x15,0
000185 3030      	CPI  R19,0
000186 f011      	BREQ _0xBB
000187 5031      	SUBI R19,1
000188 cff4      	RJMP _0xBA
                 _0xBB:
000189 e034      	LDI  R19,LOW(4)
                 _0xC4:
00018a 3038      	CPI  R19,8
00018b f460      	BRSH _0xC5
00018c 940e 01df 	CALL SUBOPT_0x4
00018e f411      	BRNE _0xC6
00018f 98a9      	CBI  0x15,1
000190 c001      	RJMP _0xC7
                 _0xC6:
000191 9aa9      	SBI  0x15,1
                 _0xC7:
000192 9aa8      	SBI  0x15,0
000193 98a8      	CBI  0x15,0
000194 3030      	CPI  R19,0
000195 f011      	BREQ _0xC5
000196 5f3f      	SUBI R19,-1
000197 cff2      	RJMP _0xC4
                 _0xC5:
                 _0x2080001:
000198 9aaa      	SBI  0x15,2
000199 e0a0      	LDI  R26,LOW(0)
00019a e0b0      	LDI  R27,0
00019b 940e 01ec 	CALL _delay_ms
00019d 940e 0203 	CALL __LOADLOCR4
00019f 9625      	ADIW R28,5
0001a0 9508      	RET
                 ; .FEND
                 _print_string:
                 ; .FSTART _print_string
0001a1 93ba      	ST   -Y,R27
0001a2 93aa      	ST   -Y,R26
0001a3 931a      	ST   -Y,R17
                 ;	*string -> Y+1
                 ;	counter -> R17
0001a4 e010      	LDI  R17,0
                 _0xCF:
0001a5 940e 01e5 	CALL SUBOPT_0x5
0001a7 91ec      	LD   R30,X
0001a8 30e0      	CPI  R30,0
0001a9 f031      	BREQ _0xD1
0001aa 940e 01e5 	CALL SUBOPT_0x5
0001ac 91ac      	LD   R26,X
0001ad df60      	RCALL _data
0001ae 5f1f      	SUBI R17,-1
0001af cff5      	RJMP _0xCF
                 _0xD1:
0001b0 8118      	LDD  R17,Y+0
0001b1 9623      	ADIW R28,3
0001b2 9508      	RET
                 ; .FEND
                 ;// Declare your global variables here
                 ;
                 ;void main(void)
                 ; 0000 0008 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0009 unsigned char *string="I am Kamyab";
                 ; 0000 000A unsigned char str[]="I am not Kamyab";
                 ; 0000 000B string=str;
0001b3 9760      	SBIW R28,16
0001b4 e180      	LDI  R24,16
0001b5 e0a0      	LDI  R26,LOW(0)
0001b6 e0b0      	LDI  R27,HIGH(0)
0001b7 e5e4      	LDI  R30,LOW(_0xD3*2)
0001b8 e0f0      	LDI  R31,HIGH(_0xD3*2)
0001b9 940e 0208 	CALL __INITLOCB
                 ;	*string -> R16,R17
                 ;	str -> Y+0
                +
0001bb e600     +LDI R16 , LOW ( _0xD2 + ( 0 ) )
0001bc e012     +LDI R17 , HIGH ( _0xD2 + ( 0 ) )
                 	__POINTWRMN 16,17,_0xD2,0
0001bd 018e      	MOVW R16,R28
                 ; 0000 000C // Declare your local variables here
                 ; 0000 000D DDRC=0xff;
0001be efef      	LDI  R30,LOW(255)
0001bf bbe4      	OUT  0x14,R30
                 ; 0000 000E PORTC=0x07;
0001c0 e0e7      	LDI  R30,LOW(7)
0001c1 bbe5      	OUT  0x15,R30
                 ; 0000 000F lcd_init();
0001c2 df38      	RCALL _lcd_init
                 ; 0000 0010 lcd_blink();
0001c3 df47      	RCALL _lcd_blink
                 ; 0000 0011 print_string(string);
0001c4 01d8      	MOVW R26,R16
0001c5 dfdb      	RCALL _print_string
                 ; 0000 0012 
                 ; 0000 0013 while (1)
                 _0xD4:
                 ; 0000 0014       {
                 ; 0000 0015       // Place your code here
                 ; 0000 0016 
                 ; 0000 0017       }
0001c6 cfff      	RJMP _0xD4
                 ; 0000 0018 }
                 _0xD7:
0001c7 cfff      	RJMP _0xD7
                 ; .FEND
                 
                 	.DSEG
                 _0xD2:
000260           	.BYTE 0xC
                 ;#ifndef _3PLCD_H
                 ;#define _3PLCD_H
                 ;#include <delay.h>
                 ;
                 ;
                 ;#pragma used+
                 ;void command (unsigned char data0);
                 ;void data (unsigned char data0);
                 ;void lcd_init();
                 ;void lcd_blink();
                 ;#pragma used-
                 ;#endif
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __seed_G100:
00026c           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0001c8 93aa      	ST   -Y,R26
0001c9 940e 01fe 	CALL __SAVELOCR4
0001cb 81ec      	LDD  R30,Y+4
0001cc 95e2      	SWAP R30
0001cd 70ef      	ANDI R30,0xF
0001ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x1:
0001cf 2fe3      	MOV  R30,R19
0001d0 2fa0      	MOV  R26,R16
0001d1 940e 01f6 	CALL __LSRB12
0001d3 70e1      	ANDI R30,LOW(0x1)
0001d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2:
0001d5 9aaa      	SBI  0x15,2
0001d6 e0a0      	LDI  R26,LOW(0)
0001d7 e0b0      	LDI  R27,0
0001d8 940c 01ec 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
0001da 98aa      	CBI  0x15,2
0001db 81ec      	LDD  R30,Y+4
0001dc 70ef      	ANDI R30,LOW(0xF)
0001dd 2f1e      	MOV  R17,R30
0001de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x4:
0001df 2fe3      	MOV  R30,R19
0001e0 2fa1      	MOV  R26,R17
0001e1 940e 01f6 	CALL __LSRB12
0001e3 70e1      	ANDI R30,LOW(0x1)
0001e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
0001e5 2fe1      	MOV  R30,R17
0001e6 e0f0      	LDI  R31,0
0001e7 81a9      	LDD  R26,Y+1
0001e8 81ba      	LDD  R27,Y+1+1
0001e9 0fae      	ADD  R26,R30
0001ea 1fbf      	ADC  R27,R31
0001eb 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0001ec 9610      	adiw r26,0
0001ed f039      	breq __delay_ms1
                 __delay_ms0:
                +
0001ee ed80     +LDI R24 , LOW ( 0x7D0 )
0001ef e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0001f0 9701     +SBIW R24 , 1
0001f1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0001f2 95a8      	wdr
0001f3 9711      	sbiw r26,1
0001f4 f7c9      	brne __delay_ms0
                 __delay_ms1:
0001f5 9508      	ret
                 
                 __LSRB12:
0001f6 23ee      	TST  R30
0001f7 2e0e      	MOV  R0,R30
0001f8 2fea      	MOV  R30,R26
0001f9 f019      	BREQ __LSRB12R
                 __LSRB12L:
0001fa 95e6      	LSR  R30
0001fb 940a      	DEC  R0
0001fc f7e9      	BRNE __LSRB12L
                 __LSRB12R:
0001fd 9508      	RET
                 
                 __SAVELOCR4:
0001fe 933a      	ST   -Y,R19
                 __SAVELOCR3:
0001ff 932a      	ST   -Y,R18
                 __SAVELOCR2:
000200 931a      	ST   -Y,R17
000201 930a      	ST   -Y,R16
000202 9508      	RET
                 
                 __LOADLOCR4:
000203 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000204 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000205 8119      	LDD  R17,Y+1
000206 8108      	LD   R16,Y
000207 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000208 0fac      	ADD  R26,R28
000209 1fbd      	ADC  R27,R29
                 __INITLOC0:
00020a 9005      	LPM  R0,Z+
00020b 920d      	ST   X+,R0
00020c 958a      	DEC  R24
00020d f7e1      	BRNE __INITLOC0
00020e 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   8 r1 :   1 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  10 r17:  13 r18:   2 r19:  60 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  11 r25:   3 r26:  26 r27:  10 r28:   6 r29:   2 r30:  50 r31:   6 
x  :   6 y  :  19 z  :   8 
Registers used: 18 out of 35 (51.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   2 
adiw  :   3 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  20 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :  23 brpl  :   0 brsh  :   8 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  37 
cbi   :  43 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   2 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   0 cpc   :   0 cpi   :  25 cpse  :   0 dec   :   3 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  23 ld    :   3 ldd   :  10 ldi   :  54 
lds   :   0 lpm   :   8 lsl   :   0 lsr   :   1 mov   :  12 movw  :   5 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   6 out   :   8 pop   :   0 push  :   0 rcall :  10 ret   :  13 
reti  :   0 rjmp  :  38 rol   :   0 ror   :   0 sbc   :   0 sbci  :   0 
sbi   :  34 sbic  :   0 sbis  :   0 sbiw  :   6 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  12 std   :   0 sts   :   0 sub   :   0 subi  :  17 swap  :   3 
tst   :   1 wdr   :   1 
Instructions used: 33 out of 116 (28.4%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00041e   1000     54   1054   32768   3.2%
[.dseg] 0x000060 0x000270      0     16     16    2048   0.8%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
